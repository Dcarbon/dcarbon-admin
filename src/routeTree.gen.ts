/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SigninImport } from './routes/signin'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthIndexImport } from './routes/_auth/index'
import { Route as AuthProjectIndexImport } from './routes/_auth/project/index'
import { Route as AuthPoIndexImport } from './routes/_auth/po/index'
import { Route as AuthContractIndexImport } from './routes/_auth/contract/index'
import { Route as AuthProjectSlugImport } from './routes/_auth/project/$slug'
import { Route as AuthPoUpdateImport } from './routes/_auth/po/update'
import { Route as AuthPoCreateImport } from './routes/_auth/po/create'
import { Route as AuthPoIdImport } from './routes/_auth/po/$id'
import { Route as AuthPoUpdateIdImport } from './routes/_auth/po/update/$id'

// Create Virtual Routes

const AuthProjectCreateLazyImport = createFileRoute('/_auth/project/create')()

// Create/Update Routes

const SigninRoute = SigninImport.update({
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthProjectIndexRoute = AuthProjectIndexImport.update({
  path: '/project/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPoIndexRoute = AuthPoIndexImport.update({
  path: '/po/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthContractIndexRoute = AuthContractIndexImport.update({
  path: '/contract/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthProjectCreateLazyRoute = AuthProjectCreateLazyImport.update({
  path: '/project/create',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/project/create.lazy').then((d) => d.Route),
)

const AuthProjectSlugRoute = AuthProjectSlugImport.update({
  path: '/project/$slug',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPoUpdateRoute = AuthPoUpdateImport.update({
  path: '/po/update',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPoCreateRoute = AuthPoCreateImport.update({
  path: '/po/create',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPoIdRoute = AuthPoIdImport.update({
  path: '/po/$id',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPoUpdateIdRoute = AuthPoUpdateIdImport.update({
  path: '/$id',
  getParentRoute: () => AuthPoUpdateRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/po/$id': {
      id: '/_auth/po/$id'
      path: '/po/$id'
      fullPath: '/po/$id'
      preLoaderRoute: typeof AuthPoIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/po/create': {
      id: '/_auth/po/create'
      path: '/po/create'
      fullPath: '/po/create'
      preLoaderRoute: typeof AuthPoCreateImport
      parentRoute: typeof AuthImport
    }
    '/_auth/po/update': {
      id: '/_auth/po/update'
      path: '/po/update'
      fullPath: '/po/update'
      preLoaderRoute: typeof AuthPoUpdateImport
      parentRoute: typeof AuthImport
    }
    '/_auth/project/$slug': {
      id: '/_auth/project/$slug'
      path: '/project/$slug'
      fullPath: '/project/$slug'
      preLoaderRoute: typeof AuthProjectSlugImport
      parentRoute: typeof AuthImport
    }
    '/_auth/project/create': {
      id: '/_auth/project/create'
      path: '/project/create'
      fullPath: '/project/create'
      preLoaderRoute: typeof AuthProjectCreateLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/contract/': {
      id: '/_auth/contract/'
      path: '/contract'
      fullPath: '/contract'
      preLoaderRoute: typeof AuthContractIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/po/': {
      id: '/_auth/po/'
      path: '/po'
      fullPath: '/po'
      preLoaderRoute: typeof AuthPoIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/project/': {
      id: '/_auth/project/'
      path: '/project'
      fullPath: '/project'
      preLoaderRoute: typeof AuthProjectIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/po/update/$id': {
      id: '/_auth/po/update/$id'
      path: '/$id'
      fullPath: '/po/update/$id'
      preLoaderRoute: typeof AuthPoUpdateIdImport
      parentRoute: typeof AuthPoUpdateImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthRoute: AuthRoute.addChildren({
    AuthIndexRoute,
    AuthPoIdRoute,
    AuthPoCreateRoute,
    AuthPoUpdateRoute: AuthPoUpdateRoute.addChildren({ AuthPoUpdateIdRoute }),
    AuthProjectSlugRoute,
    AuthProjectCreateLazyRoute,
    AuthContractIndexRoute,
    AuthPoIndexRoute,
    AuthProjectIndexRoute,
  }),
  SigninRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/signin"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/",
        "/_auth/po/$id",
        "/_auth/po/create",
        "/_auth/po/update",
        "/_auth/project/$slug",
        "/_auth/project/create",
        "/_auth/contract/",
        "/_auth/po/",
        "/_auth/project/"
      ]
    },
    "/signin": {
      "filePath": "signin.tsx"
    },
    "/_auth/": {
      "filePath": "_auth/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/po/$id": {
      "filePath": "_auth/po/$id.tsx",
      "parent": "/_auth"
    },
    "/_auth/po/create": {
      "filePath": "_auth/po/create.tsx",
      "parent": "/_auth"
    },
    "/_auth/po/update": {
      "filePath": "_auth/po/update.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/po/update/$id"
      ]
    },
    "/_auth/project/$slug": {
      "filePath": "_auth/project/$slug.tsx",
      "parent": "/_auth"
    },
    "/_auth/project/create": {
      "filePath": "_auth/project/create.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/contract/": {
      "filePath": "_auth/contract/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/po/": {
      "filePath": "_auth/po/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/project/": {
      "filePath": "_auth/project/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/po/update/$id": {
      "filePath": "_auth/po/update/$id.tsx",
      "parent": "/_auth/po/update"
    }
  }
}
ROUTE_MANIFEST_END */
